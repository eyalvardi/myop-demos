{"version":3,"file":"nx-20-ng-19-shared.mjs","sources":["../../../../shared/src/lib/shared/message.service.ts","../../../../shared/src/lib/shared/messages/messages.component.html","../../../../shared/src/lib/shared/messages/messages.component.ts","../../../../shared/src/lib/shared/hero.service.ts","../../../../shared/src/lib/shared/hero-search/hero-search.component.html","../../../../shared/src/lib/shared/hero-search/hero-search.component.ts","../../../../shared/src/lib/shared/in-memory-data.service.ts","../../../../shared/src/lib/shared/mock-heroes.ts","../../../../shared/src/lib/shared/myop-container.component.ts","../../../../shared/src/lib/shared/myop-expose-angular-component.ts","../../../../shared/src/nx-20-ng-19-shared.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","@if (messageService.messages.length) {\n  <div>\n    <h2>Messages</h2>\n    <button type=\"button\" class=\"clear\" (click)=\"messageService.clear()\">Clear messages</button>\n    @for (message of messageService.messages; track message) {\n      <div> {{message}} </div>\n    }\n  </div>\n}\n","import { Component, inject } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent {\n  messageService = inject(MessageService);\n\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { MessageService } from './message.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n  private http = inject(HttpClient);\n  private messageService = inject(MessageService);\n\n  private heroesUrl = 'api/heroes';  // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap( _ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHeroNo404<Data>(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url)\n      .pipe(\n        map(heroes => heroes[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? 'fetched' : 'did not find';\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\n      );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n         this.log(`found heroes matching \"${term}\"`) :\n         this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\n","<div id=\"search-component\">\n  <label for=\"search-box\">Hero Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    @for (hero of heroes$ | async; track hero) {\n      <li >\n        <a routerLink=\"/detail/{{hero.id}}\">\n          {{hero.name}}\n        </a>\n      </li>\n    }\n  </ul>\n</div>\n","import { Component, OnInit, inject } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\nimport { AsyncPipe } from '@angular/common';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  imports: [AsyncPipe, RouterLink],\n  styleUrls: ['./hero-search.component.css'],\n})\nexport class HeroSearchComponent implements OnInit {\n  private heroService = inject(HeroService);\n\n  heroes$!: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Hero } from './hero';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const heroes = [\n      { id: 12, name: 'Dr. Nice' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr. IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return {heroes};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  genId(heroes: Hero[]): number {\n    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n  }\n}\n","import { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 12, name: 'Dr. Nice' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr. IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n","import { afterRender, Component, ElementRef, inject, input, linkedSignal, output, viewChild } from '@angular/core';\nimport { IUserFlow } from '@myop/sdk/common';\nimport { HostSDK } from '@myop/sdk/dist/module/host/hostSDK';\nimport { IMyopComponent } from '@myop/sdk/host';\nimport { ActivatedRoute } from '@angular/router';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'myop-container',\n  standalone: true,\n  template: `\n  <div #myopContainer>\n    <ng-content>\n      <!--  Not Loaded-->\n      Loading...\n    </ng-content>\n    <ng-content select=\"[error]\">     \n    </ng-content>\n  </div>\n  `\n})\nexport class MyopContainerComponent {\n  protected route = inject(ActivatedRoute);\n  routeData = toSignal<{flowId:string,componentId:string}>(this.route.data as any);\n\n\n  //// View children\n  myopContainer = viewChild<ElementRef<HTMLDivElement>>('myopContainer');\n\n  //// INPUTS\n  injector = input<any>();\n\n  _flowId = input<string>('',{alias:'flowId'});\n  flowId = linkedSignal(()=> this._flowId() || this.routeData()?.flowId || '');\n\n  _componentId = input<string>('',{alias:'componentId'});\n  componentId = linkedSignal(()=> this._componentId() || this.routeData()?.componentId || '');\n\n  inputs = input<{[key:string]:any}>();\n\n  //// Outputs\n  componentReady = output<IMyopComponent>()\n\n  static loading?: Promise<void>;\n  static isLoaded = false;\n  static userFlows: Record<string, Promise<IUserFlow>> = {};\n  static hostSDK?: HostSDK;\n\n  constructor() {\n    if (typeof window !== 'undefined') {\n      let firstRender = true;\n\n      afterRender(() => {\n        if (firstRender) {\n          this.load();\n          firstRender = false;\n        }\n      });\n    }\n  }\n\n\n  static async ready () {\n    if (MyopContainerComponent.isLoaded) {\n      return;\n    }\n\n    if (MyopContainerComponent.loading) {\n      await MyopContainerComponent.loading;\n      MyopContainerComponent.loading = undefined;\n      return;\n    }\n\n    // eslint-disable-next-line no-async-promise-executor\n    MyopContainerComponent.loading = new Promise(async (resolve, reject) => {\n      const { hostSDK } = await import('@myop/sdk/host');\n      MyopContainerComponent.hostSDK = hostSDK;\n      MyopContainerComponent.isLoaded = true;\n      resolve();\n    });\n\n    return MyopContainerComponent.loading;\n  }\n\n  async load() {\n    await MyopContainerComponent.ready();\n\n    if (!MyopContainerComponent.userFlows[this.flowId()]) {\n      // eslint-disable-next-line no-async-promise-executor\n      MyopContainerComponent.userFlows[this.flowId()] = new Promise(async (resolve, reject) => {\n        const res = await fetch(`https://cloud.myop.dev/flow?id=${this.flowId()}&resolve=components`);\n        const json = await res.json();\n\n        resolve(json.item);\n      });\n    }\n\n    const flow = await MyopContainerComponent.userFlows[this.flowId()];\n    const component = await MyopContainerComponent.hostSDK!.loadComponent(\n      flow!.components.find(c => c.type.id === this.componentId())!, this.myopContainer()?.nativeElement,{hidden:false}\n    );\n    this.componentReady.emit(component);\n  }\n}\n","import { EnvironmentInjector, inject, Injectable, makeEnvironmentProviders, Type } from '@angular/core';\nimport 'zone.js';\nimport { ApplicationConfig, createApplication } from '@angular/platform-browser';\nimport {createCustomElement} from '@angular/elements';\nimport { WebComponentSDK } from '@myop/sdk/webcomponent'\n\n@Injectable({providedIn: 'root'})\nexport class MyopExposeService {\n  protected injector = inject(EnvironmentInjector);\n\n  expose (component: Type<any>, tagName: string) {\n\n    if (customElements.get(tagName))\n      return;\n\n    const loadSDK = async () => {\n      const sdk = new WebComponentSDK();\n\n      class CustomMyopElement extends HTMLElement {\n        //  root?: Root;\n        _props: any = {};\n        _shadow: any;\n\n        connectedCallback() {\n          // debugger;\n          //  const shadow = this.attachShadow({mode: 'closed'});\n          const shadow = this.attachShadow({ mode: 'open' });\n          sdk.connectedCallback(this, shadow);\n          this._shadow = shadow\n          this.render();\n        }\n\n        static get observedAttributes() {\n          return ['x', 'y'];\n        }\n\n        attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n          // @ts-ignore\n          this._props[name] = newValue;\n          this.render();\n        }\n\n        async render() {\n          const r = Math.random();\n          this._shadow.innerHTML = `<myop-custom-tag-${r}/>`;\n\n          createApplication()\n            .then((app) => {\n              const MyComponent = createCustomElement(component, { injector: app.injector });\n              customElements.define(`myop-custom-tag-${r}`, MyComponent);\n            })\n            .catch((err) => console.error(err));\n        }\n\n        disconnectedCallback() {\n        }\n      }\n\n      //const tagName = 'angular-component';\n      customElements.define(tagName, CustomMyopElement);\n      console.log(`define('${tagName}') was called, web component ready to use`);\n\n      sdk.init();\n    }\n\n    loadSDK().then();\n  }\n}\n\n// export function provideMyopExpose(component: Type<any>, tagName: string) {\n//   return makeEnvironmentProviders([\n//     { provide:'', useClass:expose}\n//   ])\n// }\n\nexport const expose = (component: Type<any>, tagName: string,appConfig?:ApplicationConfig) => {\n\n    if (customElements.get(tagName))\n      return;\n\n    const loadSDK = async () => {\n      const sdk = new WebComponentSDK();\n\n      class CustomMyopElement extends HTMLElement {\n        //  root?: Root;\n        _props: any = {};\n        _shadow: any;\n\n        connectedCallback() {\n          // debugger;\n          //  const shadow = this.attachShadow({mode: 'closed'});\n          const shadow = this.attachShadow({ mode: 'open' });\n          sdk.connectedCallback(this, shadow);\n          this._shadow = shadow\n          this.render();\n        }\n\n        static get observedAttributes() {\n          return ['x', 'y'];\n        }\n\n        attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n          // @ts-ignore\n          this._props[name] = newValue;\n          this.render();\n        }\n\n        async render() {\n          const r = Math.random();\n          this._shadow.innerHTML = `<myop-custom-tag-${r}/>`;\n\n          createApplication(appConfig)\n            .then((app) => {\n              const MyComponent = createCustomElement(component, { injector: app.injector });\n              customElements.define(`myop-custom-tag-${r}`, MyComponent);\n            })\n            .catch((err) => console.error(err));\n        }\n\n        disconnectedCallback() {\n        }\n      }\n\n      //const tagName = 'angular-component';\n      customElements.define(tagName, CustomMyopElement);\n      console.log(`define('${tagName}') was called, web component ready to use`);\n\n      sdk.init();\n    }\n\n    loadSDK().then();\n  }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}